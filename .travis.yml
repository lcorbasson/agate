language: python
#os: linux
#python:
#  - "3.8"
#  - "3.7"
#  - "3.6"
#  - "3.5"
#  - "2.7"
#  - "pypy3"
#  - "pypy3.5-6.0"
#  - "pypy3.5-7.0"
#  - "pypy3.6-7.0.0"
#  - "pypy"
#  - "pypy2.7-6.0"
#  - "pypy2.7-7.0.0"
jobs:
  include:
#    - os: osx
#      python: "3.7"
#      osx_image: xcode11.2  # Python 3.7.4 running on macOS 10.14.4
#      language: shell       # 'language: python' is an error on Travis CI macOS
#      before_install:
#        - brew install pkg-config
#        - brew install icu4c
#        - export PATH="$PATH:/usr/local/opt/icu4c/bin"
#        - export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/opt/icu4c/lib/pkgconfig"
#        - python3 -m pip install --upgrade pip
#        - python3 -m pip install --upgrade virtualenv
#        - virtualenv -p python3 --system-site-packages "$HOME/venv"
#        - source "$HOME/venv/bin/activate"
#        - CFLAGS="-O0" STATIC_DEPS=true python3 -m pip install lxml
#        - python3 --version
#        - python --version
#      env:
#        - HOMEBREW_NO_INSTALL_CLEANUP=1
#        - HOMEBREW_NO_ANALYTICS=1
#      before_cache:
#        - rm -f "$HOME/Library/Caches/pip/log/debug.log"
#      cache:
#        directories:
#          - "$HOME/Library/Caches/pip"
    - os: windows           # Windows 10.0.17134 N/A Build 17134
      python: "3.8"
      language: shell       # 'language: python' is an error on Travis CI Windows
      before_install:
        - export winPWD="${PWD#/}"
        - export winPWD="${winPWD/\//:/}"
        - export winPWD="${winPWD//\//\\}"
#        - choco install pkgconfiglite
#        - pkg-config() { "$ChocolateyInstall/bin/pkg-config.exe" "$@"; }
#        - git clone https://github.com/Microsoft/vcpkg.git
#        - pushd vcpkg
#        - ./bootstrap-vcpkg.bat -disableMetrics
#        - ./vcpkg integrate install
#        # Start a process that runs as a keep-alive to avoid travis quitting if there is no output
#        - start_spinner() { if [ -n "$SPINNER_PID" ]; then return; fi; >&2 echo "Building libraries..."; (while true; do sleep 60; >&2 echo "Still building..."; done) & SPINNER_PID="$!"; disown; }
#        - stop_spinner() { if [ ! -n "$SPINNER_PID" ]; then return; fi; kill "$SPINNER_PID"; unset SPINNER_PID; >&2 echo "Building libraries finished."; }
#        - start_spinner
#        - ./vcpkg install icu:x64-windows
#        - stop_spinner
#        - cp buildtrees/icu/x64-windows-rel/bin/uconv.exe installed/x64-windows/bin/
#        - mkdir -p installed/x64-windows/config
#        - cp buildtrees/icu/x64-windows-rel/config/* installed/x64-windows/config/
#        - popd
#        - export PATH="$PATH:$PWD/vcpkg/installed/x64-windows/bin"
#        - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$PWD/vcpkg/installed/x64-windows/bin:$PWD/vcpkg/installed/x64-windows/lib"
#        - export PKG_CONFIG_PATH="$PWD/vcpkg/installed/x64-windows/config"
        - export PYICU_CFLAGS="/MT;/DU_STATIC_IMPLEMENTATION;/Zc:wchar_t"
#        - export PYICU_INCLUDES="$PWD/vcpkg/installed/x64-windows/include"
#        - export PYICU_LFLAGS="/LIBPATH:$winPWD/vcpkg/installed/x64-windows/lib;/LIBPATH:$winPWD/vcpkg/installed/x64-windows/bin;-l"
#        - wget -q https://github.com/unicode-org/icu/releases/download/release-65-1/icu4c-65_1-Win64-MSVC2017.zip -O icu4c.zip
#        - unzip -q icu4c.zip -d /c/icu
        - wget -q https://www.npcglib.org/~stathis/downloads/icu-59.1-vs2017.7z -O icu-vs2017.7z
        - 7z x icu-vs2017.7z -oc:\icu -r
#        - pushd /c/icu
#        - mv bin64 bin
#        - mv lib64 lib
#        - popd
        - export PATH="$PATH:/c/icu/bin"
        - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/c/icu/bin:/c/icu/lib"
#        - export PYICU_INCLUDES="/c/icu/include"
#        - export PYICU_LFLAGS="/LIBPATH:/c/icu/lib"
        - uconv -V
        - export ICU_VERSION="$(uconv -V | sed -e 's,.*\<ICU \([^ ]*\).*,\1,')"
        - choco install python --version 3.8.0
        - python -m pip install --upgrade pip
        - python --version
        - python -m pip install pyicu
      env: PATH=/c/Python38:/c/Python38/Scripts:$PATH
  # allow failure on OSes other than Linux
  # and on PyPy, which regularly segfaults on Travis CI
  # because of resource exhaustion
  allow_failures:
    - os: osx
    - os: windows
    - python: "pypy3"
    - python: "pypy3.5-6.0"
    - python: "pypy3.5-7.0"
    - python: "pypy3.6-7.0.0"
    - python: "pypy"
    - python: "pypy2.7-6.0"
    - python: "pypy2.7-7.0.0"
  fast_finish: true
# command to install dependencies
install:
  - >
    if [[ "$TRAVIS_PYTHON_VERSION" == "2"* ]] || [[ "$TRAVIS_PYTHON_VERSION" == "pypy"* ]] && [[ "$TRAVIS_PYTHON_VERSION" != "pypy3"* ]]; then
      pip install -r requirements-py2.txt;
    else
      pip3 install -r requirements-py3.txt;
    fi
# command to run tests
script:
  # pypy3 segfaults if running all tests in the same process
  - >
    if [[ "$TRAVIS_PYTHON_VERSION" == "pypy"* ]]; then
      find tests -type f -name "*.py" | while read s; do
        ( [ ! -x "$s" ] && nosetests -v "$s" ) || ( echo "$s" >> "script-failures.log" );
      done;
      if [ -e "script-failures.log" ]; then
        exit 1;
      fi;
    else
      nosetests tests;
    fi
after_failure:
  - >
    if [ -e "script-failures.log" ]; then
      echo $(cat "script-failures.log");
    fi
addons:
  apt:
    packages:
      - language-pack-fr
      - language-pack-de
      - language-pack-ko
      - pkg-config
